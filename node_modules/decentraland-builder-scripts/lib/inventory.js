"use strict";
/// <reference path="./types.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
function createInventory(UICanvas, UIContainerStack, UIImage) {
    var canvas = null;
    var container = null;
    var images = {};
    function getContainer() {
        if (!canvas) {
            canvas = new UICanvas();
        }
        if (!container) {
            container = new UIContainerStack(canvas);
            container.isPointerBlocker = false;
            container.vAlign = 'bottom';
            container.hAlign = 'right';
            container.stackOrientation = 0;
            container.spacing = 0;
            container.positionY = 75;
            container.positionX = -25;
        }
        return container;
    }
    return {
        add: function (id, texture) {
            var image = images[id] || new UIImage(getContainer(), texture);
            image.width = 128;
            image.height = 128;
            image.sourceTop = 0;
            image.sourceLeft = 0;
            image.sourceHeight = 256;
            image.sourceWidth = 256;
            image.isPointerBlocker = false;
            image.visible = true;
            images[id] = image;
        },
        remove: function (id) {
            var image = images[id];
            if (image) {
                image.visible = false;
                image.height = 0;
                image.width = 0;
            }
        },
        has: function (id) {
            return id in images && images[id].visible;
        }
    };
}
exports.createInventory = createInventory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52ZW50b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2ludmVudG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEscUNBQXFDOztBQUVyQyxTQUFnQixlQUFlLENBQzdCLFFBQWEsRUFDYixnQkFBcUIsRUFDckIsT0FBWTtJQUVaLElBQUksTUFBTSxHQUFRLElBQUksQ0FBQTtJQUN0QixJQUFJLFNBQVMsR0FBUSxJQUFJLENBQUE7SUFDekIsSUFBSSxNQUFNLEdBQXdCLEVBQUUsQ0FBQTtJQUVwQyxTQUFTLFlBQVk7UUFDbkIsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNYLE1BQU0sR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFBO1NBQ3hCO1FBQ0QsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNkLFNBQVMsR0FBRyxJQUFJLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFBO1lBQ3hDLFNBQVMsQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUE7WUFDbEMsU0FBUyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUE7WUFDM0IsU0FBUyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUE7WUFDMUIsU0FBUyxDQUFDLGdCQUFnQixHQUFHLENBQUMsQ0FBQTtZQUM5QixTQUFTLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQTtZQUNyQixTQUFTLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQTtZQUN4QixTQUFTLENBQUMsU0FBUyxHQUFHLENBQUMsRUFBRSxDQUFBO1NBQzFCO1FBQ0QsT0FBTyxTQUFTLENBQUE7SUFDbEIsQ0FBQztJQUVELE9BQU87UUFDTCxHQUFHLEVBQUgsVUFBSSxFQUFVLEVBQUUsT0FBWTtZQUMxQixJQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsWUFBWSxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUE7WUFDaEUsS0FBSyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUE7WUFDakIsS0FBSyxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUE7WUFDbEIsS0FBSyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUE7WUFDbkIsS0FBSyxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUE7WUFDcEIsS0FBSyxDQUFDLFlBQVksR0FBRyxHQUFHLENBQUE7WUFDeEIsS0FBSyxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUE7WUFDdkIsS0FBSyxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQTtZQUM5QixLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQTtZQUNwQixNQUFNLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFBO1FBQ3BCLENBQUM7UUFFRCxNQUFNLEVBQU4sVUFBTyxFQUFVO1lBQ2YsSUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQ3hCLElBQUksS0FBSyxFQUFFO2dCQUNULEtBQUssQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFBO2dCQUNyQixLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQTtnQkFDaEIsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUE7YUFDaEI7UUFDSCxDQUFDO1FBRUQsR0FBRyxFQUFILFVBQUksRUFBVTtZQUNaLE9BQU8sRUFBRSxJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFBO1FBQzNDLENBQUM7S0FDRixDQUFBO0FBQ0gsQ0FBQztBQXJERCwwQ0FxREMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi90eXBlcy5kLnRzXCIgLz5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUludmVudG9yeShcbiAgVUlDYW52YXM6IGFueSxcbiAgVUlDb250YWluZXJTdGFjazogYW55LFxuICBVSUltYWdlOiBhbnlcbik6IElJbnZlbnRvcnkge1xuICBsZXQgY2FudmFzOiBhbnkgPSBudWxsXG4gIGxldCBjb250YWluZXI6IGFueSA9IG51bGxcbiAgbGV0IGltYWdlczogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XG5cbiAgZnVuY3Rpb24gZ2V0Q29udGFpbmVyKCkge1xuICAgIGlmICghY2FudmFzKSB7XG4gICAgICBjYW52YXMgPSBuZXcgVUlDYW52YXMoKVxuICAgIH1cbiAgICBpZiAoIWNvbnRhaW5lcikge1xuICAgICAgY29udGFpbmVyID0gbmV3IFVJQ29udGFpbmVyU3RhY2soY2FudmFzKVxuICAgICAgY29udGFpbmVyLmlzUG9pbnRlckJsb2NrZXIgPSBmYWxzZVxuICAgICAgY29udGFpbmVyLnZBbGlnbiA9ICdib3R0b20nXG4gICAgICBjb250YWluZXIuaEFsaWduID0gJ3JpZ2h0J1xuICAgICAgY29udGFpbmVyLnN0YWNrT3JpZW50YXRpb24gPSAwXG4gICAgICBjb250YWluZXIuc3BhY2luZyA9IDBcbiAgICAgIGNvbnRhaW5lci5wb3NpdGlvblkgPSA3NVxuICAgICAgY29udGFpbmVyLnBvc2l0aW9uWCA9IC0yNVxuICAgIH1cbiAgICByZXR1cm4gY29udGFpbmVyXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGFkZChpZDogc3RyaW5nLCB0ZXh0dXJlOiBhbnkpIHtcbiAgICAgIGNvbnN0IGltYWdlID0gaW1hZ2VzW2lkXSB8fCBuZXcgVUlJbWFnZShnZXRDb250YWluZXIoKSwgdGV4dHVyZSlcbiAgICAgIGltYWdlLndpZHRoID0gMTI4XG4gICAgICBpbWFnZS5oZWlnaHQgPSAxMjhcbiAgICAgIGltYWdlLnNvdXJjZVRvcCA9IDBcbiAgICAgIGltYWdlLnNvdXJjZUxlZnQgPSAwXG4gICAgICBpbWFnZS5zb3VyY2VIZWlnaHQgPSAyNTZcbiAgICAgIGltYWdlLnNvdXJjZVdpZHRoID0gMjU2XG4gICAgICBpbWFnZS5pc1BvaW50ZXJCbG9ja2VyID0gZmFsc2VcbiAgICAgIGltYWdlLnZpc2libGUgPSB0cnVlXG4gICAgICBpbWFnZXNbaWRdID0gaW1hZ2VcbiAgICB9LFxuXG4gICAgcmVtb3ZlKGlkOiBzdHJpbmcpIHtcbiAgICAgIGNvbnN0IGltYWdlID0gaW1hZ2VzW2lkXVxuICAgICAgaWYgKGltYWdlKSB7XG4gICAgICAgIGltYWdlLnZpc2libGUgPSBmYWxzZVxuICAgICAgICBpbWFnZS5oZWlnaHQgPSAwXG4gICAgICAgIGltYWdlLndpZHRoID0gMFxuICAgICAgfVxuICAgIH0sXG5cbiAgICBoYXMoaWQ6IHN0cmluZykge1xuICAgICAgcmV0dXJuIGlkIGluIGltYWdlcyAmJiBpbWFnZXNbaWRdLnZpc2libGVcbiAgICB9XG4gIH1cbn1cbiJdfQ==